{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovie","setTitle","setMovies","_useState","useState","_useState2","_slicedToArray","hasTitleError","setHasTitleError","_useState3","_useState4","isLoading","setIsLoading","isEmpty","trim","length","_Fragment","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","response","movieData","Title","currentMovieData","Poster","Plot","imdbID","finally","newMovie","some","currentMovie","_toConsumableArray","App","_useState5","_useState6","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1464b856.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const defaultPicture\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie?.imgUrl !== 'N/A' ? movie?.imgUrl : defaultPicture}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie?.description}\n          <br />\n          <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import './FindMovie.scss';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ninterface Props {\n  movie: Movie | null,\n  movies: Movie[],\n  setMovie: (newMovie: Movie | null) => void,\n  title: string,\n  setTitle: (text: string) => void,\n  setMovies: (movieArray: Movie[]) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  movie,\n  movies,\n  setMovie,\n  title,\n  setTitle,\n  setMovies,\n}) => {\n  const URL = 'https://www.imdb.com/title/';\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const isEmpty = !title.trim().length;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleMovieAdd = (newMovie: Movie) => {\n    const isMovieInArray = movies.some(currentMovie => (\n      currentMovie.title === newMovie.title\n    ));\n\n    if (isMovieInArray) {\n      setMovie(null);\n\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n    setMovie(null);\n    setTitle('');\n  };\n\n  const handleFindMovie = (\n    event: React.FormEvent,\n  ) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(title)\n      .then((response: MovieData | ResponseError) => {\n        const movieData = response as MovieData;\n\n        if (!movieData.Title) {\n          setHasTitleError(true);\n\n          return;\n        }\n\n        const currentMovieData = {\n          Poster: movieData.Poster,\n          Title: movieData.Title,\n          Plot: movieData.Plot,\n          imdbID: movieData.imdbID,\n        };\n\n        setMovie({\n          title: currentMovieData.Title,\n          description: currentMovieData.Plot,\n          imgUrl: currentMovieData.Poster,\n          imdbUrl: `${URL}${currentMovieData.imdbID}`,\n          imdbId: currentMovieData.imdbID,\n        });\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasTitleError,\n              })}\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n          {hasTitleError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isEmpty}\n              onClick={handleFindMovie}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n            <div className=\"is-loading\" />\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleMovieAdd(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=e0499d8c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={movie}\n          movies={movies}\n          setMovie={setMovie}\n          title={title}\n          setTitle={setTitle}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}